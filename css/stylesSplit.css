:root {
    --white: #ffffff;
    --off-white: #ede7d8;
    --light-gray: #f0f0f0;
    --light-gray2: #dfdfdf;
    --transp-white-1: rgba(255,255,255,0.25);
    --transp-white-2: rgba(255,255,255,0.1);
    --blue-1: #62b8f5;
    --blue02: #4475ef;
    --shadow: rgba(3,46,87,0.2);
    --dark-shadow: #2e2b3d;
    --green: #08f800;
    --yuck: #5c540b;
    --yuckLight: #9e9b7b;
    --yellow: #e3d400;
    --blood: rgb(182, 57, 11);
    --orange: #de910d;
    --gray1: #a4a4a4;

}

/* Global styles */
*{
    padding: 0; /* Removes padding from all elements */
    margin: 0; /* Removes margins from all elements */
    box-sizing: border-box; /* Changes the box model to include padding and border in the element's total width and height */
    font-family: "Tenorite"; /* Sets a default font for all elements */
}


button{
    background-color: var(--yellow);
    cursor:-webkit-grab;
    color: black;
    padding: 5px 5px;
    font-size: 15px;
    display: inline-flex;
}


/* Keyframes to simulate color transition */
@keyframes colorCycle {
    0% { background-color: var(--yellow); }
    35% { background-color: var(--green); }
    50% { background-color: var(--blood); }
    75% { background-color: var(--yuck); }
    100% { background-color: var(--yellow);}
}

button:hover {
    animation: colorCycle 5s infinite; /* Apply the animation on hover */
}


/* New container for all top buttons */
.top-buttons-container {
    display: flex;
    justify-content: space-between;
    align-items: center;
    padding: 10px;
}
  
.Home,
.clear-data-container,
.settings-container {
    /* Make sure each container can grow and shrink as needed */
    flex: 1;
    display: flex;
    justify-content: center; /* Center content of each button container */
}

/* Specifically align the Home button to the left */
.Home {
    justify-content: flex-start;
    padding: 10px 10px;
}


.clear-data-container {
    position: absolute;
    left: 50%;
    transform: translateX(-50%);
  }


.sign-in-container {
    position: relative;
    display: inline-block;
    margin-right: 30px; 
    top: 4px;
}

#signInButton {
    margin-bottom: 5px; 
    border: none;
    background: none;
    padding: 10px; 
    margin-right: 20px;
}

#signInButton i {
    font-size: 24px; 
}


#signInButton:hover {
    animation: none;
    background-color: none;
}

/* Change the color of the gear icon when hovering over the settings button */
#signInButton:hover .fa-user {
    color: var(--blue02) !important; 
}


#signInPopup {
    min-width: 100px; /* Set a minimum width to ensure "Sign In to Save Data" fits on one line */
    text-align: center;
    left: 0%;
    transform: translateX(-30%);
    padding: 15px !important;
}


/* .signin-text {
    font-weight: bold;
    font-size: 18px;
    cursor: pointer;
    color: blue;
    text-decoration: underline;
} */

.save-data-text {
    font-size: 14px;
    margin-top: 5px;
}


#postSignInContent {
    display: flex;
    flex-direction: column; /* Stack buttons vertically */
    align-items: center; 
    display: flex;
}

#saveReceiptButton,
#signOutButton {
    width: 100%; /* This makes the buttons fill the container */
    box-sizing: border-box; /* Ensures padding and border are included in the element's total width and height */
    margin: 5px 0; 
}

#saveReceiptButton:hover {
    animation: none;
    background-color:none;
}

/* save receipt flash */
@keyframes borderFlash {
    0%, 100% { 
        border-color: initial; 
        border-width: 2px; /* Assuming 2px is your initial border width */
    }
    50% { 
        border-color: #32CD32; /* Flashing to green */
        border-width: 5px; /* Thicker border during flash */
    }
}

@keyframes flashAnimation {
    0%, 100% { background-color: initial; }
    50% { background-color: #90ee90; } /* Light green flash */
}

/* make entire screen flash */
#flashOverlay {
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background-color: rgba(144, 238, 144, 0.75); /* Light green with some transparency */
    z-index: 9999; /* Ensure it's above everything else */
    display: none; /* Initially hidden */
    animation: flash 0.5s ease-out; /* Adjusted for a quicker flash */

}

/* Flash animation */
@keyframes flash {
    0%, 100% { opacity: 0; }
    50% { opacity: 1; }
}

.flash-success {
    animation: flashAnimation 2s; /* Adjust time as needed */
}

.flash-border-success {
    animation: borderFlash 1s; /* Adjust the duration as needed */
}

#signOutButton {
    background-color: var(--gray1);
}

#signOutButton:hover {
    animation: none;
    background-color: var(--blood);
}




  
/* Settings Button */
.settings-container {
    position: absolute;
    top: 19px;
    right: 10px;
    flex: 1;
    display: flex;
    justify-content: flex-end;
}

/* Adjust the popup positioning */
.popup {
    display: none;
    position: absolute;
    margin-top: -2.5px;
    margin-right: 5px;
    right: 0;
    top: 100%; /* Align the top of the popup with the bottom of the button */
    padding: 20px;
    border: 1px solid #ccc;
    background-color: var(--white);
    box-shadow: 0 2px 10px var(--shadow);
    z-index: 10;
  }



/* Styling for the settings button */
.popup h2 {
    text-align: center;
    margin-bottom: 15px;
}

.setting {
    display: flex;
    justify-content: space-between;
    align-items: center;
    margin-bottom: 0px;
}

#settingsButton {
    margin-bottom: 10px; /* Space between button and popup */
    border: none;
    background: none;
}

#settingsButton i {
    font-size: 24px;
}

.setting-label {
    margin-right: 15px; /* Adjust the space between label and toggle as needed */
    margin-bottom: 10px;
}

/* Override the hover effect for the settings button */
#settingsButton:hover {
    animation: none;
    background-color: none;
}

/* Change the color of the gear icon when hovering over the settings button */
#settingsButton:hover .fa-gear {
    color: var(--blue02) !important; 
}


/* Container for the toggle switch, adds spacing around the switch */
.toggle-switch {
    position: relative;
    display: inline-block;
    width: 50px; /* Width of the switch */
    height: 24px; /* Height of the switch */
    margin: auto;
    vertical-align: middle;
  }

  /* Hides default checkbox */
  .toggle-input {
    opacity: 0;
    width: 0;
    height: 0;
  }

  /* The slider */
  .toggle-slider {
    position: absolute;
    cursor: pointer;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background-color: #ccc;
    -webkit-transition: .2s;
    transition: .2s;
    border-radius: 24px; /* Circular edges */
  }

  .toggle-slider:before {
    position: absolute;
    content: "";
    height: 20px;
    width: 20px;
    left: 2px;
    bottom: 2px;
    background-color: white;
    -webkit-transition: .2s;
    transition: .2s;
    border-radius: 50%;
  }

  /* When the checkbox is checked, add a blue background */
.toggle-input:checked + .toggle-slider {
    background-color: var(--orange);
  }

  /* Move the slider to the right when checked */
.toggle-input:checked + .toggle-slider:before {
    -webkit-transform: translateX(26px);
    -ms-transform: translateX(26px);
    transform: translateX(26px);
  }

/* Add styling for when the mouse hovers over the input */
.toggle-slider:hover {
    background-color: var(--shadow);
  }

/* Style for when the input is focused by keyboard navigation, adds a box shadow */
.toggle-input:focus + .toggle-slider {
    box-shadow: 0 0 1px #2196F3;
  }


/* Adjust the clear data button height */
#clearDataButton {
    height: auto;
    padding: 5px 10px; 
}


/* ---------------------------------------------------------------*/



.input-region{
    margin-top: 10px;
}

/* receipt name */
#receiptNameForm {
    background-color: var(--light-gray2);
    padding: 20px;
    margin-left: 0px;
    margin-right: 10px;
    margin-bottom: 10px !important;
    width: 100%; 
    max-width: 400px; 
    margin: 0 auto;
}


.row {
    display: flex;
    justify-content: center;
    align-items: start;
    width: 100%;
    gap: 20px;
    margin-bottom: 10px;
}



.input-region > form#itemForm {
    width: 100%;
}

.input-region form{
    margin: auto;
    display: flex;
    justify-content: center;
    gap: 3px;
}

.input-region label{
    text-align: center;
    margin-left: 25px;
}

/* Vertically center buyer and tax labels */
.aligned-label {
    display: flex;
    align-items: center;
    margin-right: 2.5px; /* Adjust as necessary */
  }


.input-region button{
    margin-left: 10px;
}

.input-region input[type="text"],
.input-region input[type="number"] {
    padding: 5px;
}

#addBuyerButton {
    display: block;
}

#buyersForm,
#taxForm {
    margin: 0 30px;
}

.item-name-container {
    margin-right: 20px;
}

.item-price-container {
    margin-left: 20px;
}


/* colored boxes */

#buyersForm, #taxForm {
    width: 100%; /* Set a specific width */
    max-width: 325px; /* Example max width to prevent overly wide forms on larger screens */
    margin: 0 auto; /* Center the forms */
}

#taxForm {
    background-color: rgb(216, 177, 168);
    padding: 15px;
    padding-left: 20px;
}

#buyersForm {
    background-color: rgb(176, 209, 209);
    padding: 15px;
    padding-right: 20px;
}

#itemForm {
    background-color: #dfddbf;
    padding: 20px;
    margin-left: 0px;
    margin-right: 10px;
    margin-bottom: 0px;
}


/* Hide the up and down arrows from the number input */
input[type='number']::-webkit-inner-spin-button,
input[type='number']::-webkit-outer-spin-button {
  -webkit-appearance: none;
  margin: 0;
}


#total-cost-display {
    text-align: center;
    font-weight: bold;
    margin-top: 10px;
    margin-bottom: 30px;
    transition: margin-bottom 0.3s ease;
  }
  
  #total-cost-display.grid-visible {
    margin-bottom: 0px;
  }


/* mobile view */
@media (max-width: 750px) {
    .row {
        flex-direction: column;
        align-items: center;
        gap: 10px;
    }

    .input-region form {
        align-items: center; /* Center-align the items */
    }

    /* You might need to adjust the margins if your labels are taking more space */
    .input-region label {
        margin-right: 10px; /* Adjust this value so that it matches the other labels */
    }
    
    
    /* Adjust label alignment with larger input boxes */
    .input-region label.aligned-label {
        display: flex;
        align-items: center;
        justify-content: flex-end;
        text-align: right;
        margin-bottom: 2px; 
    }

    .input-region input[type="text"], 
    .input-region input[type="number"] {
        height: 40px; 
    }

    /* Ensure that containers are stacked vertically */
    .item-name-container,
    .item-price-container {
        display: flex;
        flex-direction: row;
        width: 45%; /* Take the full width to contain the label and input */
        margin: 0; /* Reset margin */
        align-items: center; /* Aligns items to the start of the flex container */
    }

    /* Adjust the labels */
    .item-name-container label,
    .item-price-container label {
        white-space: nowrap;
        width: auto; /* Let the width be as wide as the content */
        margin-left: 0; /* Reset any margin to align with the container start */
        margin-bottom: 5px; /* Space between label and input */
    }

    /* Adjust the inputs */
    .item-name-container input,
    .item-price-container input {
        width: calc(100% - 20px); /* Take full width minus padding for consistency */
        margin: 0; /* Reset margin to align with the start of the container */
    }

    /* Style the button */
    #itemForm button#submitItemButton {
        width: 100%; /* Button should take the full width of its container */
        margin-top: 10px; /* Provide some space above the button */
    }




    /* Adjust the form layout to stack elements vertically */
    #itemForm {
        flex-direction: column; 
        align-items: center;
        max-width: 450px; /* Adjust the max-width to match other input forms */
        margin: 0 auto; /* Center the form within the viewport */
    }

    #receiptNameForm {
        margin-bottom: 10px !important;
    }

    #itemForm input[type="text"],
    #itemForm input[type="number"] {
        margin-bottom: 10px; /* Provide space between successive fields */
    }

    #buyersForm, #taxForm, #receiptNameForm {
        width: 100%; /* Set a specific width */
        max-width: 450px; /* Example max width to prevent overly wide forms on larger screens */
        margin: 0 auto; /* Center the forms */
    }

    #itemForm button#submitItemButton {
        width: 45%; 
        height: 40px;
        margin: 10px auto; /* Top and bottom margin is 10px, left and right auto for centering */
        display: block; /* Display block to enable the use of auto margins for centering */
    }

}

/* for small small screens */
@media (max-width: 480px) {
    #itemForm .item-name-container,
    #itemForm .item-price-container,
    #itemForm button#submitItemButton {
      width: 60%; 
      margin-left: auto;
      margin-right: auto;
    }

    #itemForm, #buyersForm, #taxForm, #receiptNameForm {
        max-width: 400px; 
    }

    #itemForm button#submitItemButton {
        height: 40px; 
      }
    

  }

/*-------------------------------------------------------*/



/* display grid */

/* display title background color */
#display-titles > div {
    background-color: var(--light-gray); /* Different background for title row */
}
  


#display-titles {
    align-items: center;
    margin-right: 10px;
    margin-left: 10px;
    font-weight: bold;
}

#display-titles,
#display-info {
  display: grid;
  grid-template-columns: 0.7fr 0.5fr 0.4fr 1.4fr;
}

#display-titles > div {
    padding: 10px;
    text-align: center;
    margin-top: 30px;
    border: 2px solid black;
    border-top: 3px solid black;
    border-bottom: 3px solid black;
}


/* Adds border to the left of the first cell */
#display-titles > div:first-child {
    border-left: 4px solid black;
}

/* Adds border to the right of the last cell */
#display-titles > div:last-child {
    border-right: 4px solid black;
}



#display-info > div {
    border-top: none;
    padding: 10px;
    text-align: center;
    margin-top: 0px;
}

/* Adds border to the left of the first column in every row of the display grid */
#display-info .item-row > div:first-child {
    border-left: 2px solid black;
}

/* Adds border to the right of the last column in every row of the display grid */
#display-info .item-row > div:last-child {
    border-right: 2px solid black;
}



#display-info {
    gap: 0px;
    row-gap: 0px; /*gap between display rows */
    margin-left: 10px;
    margin-right: 10px;
    margin-bottom: 30px;
    margin-top: 5px;
}

#cost-per-buyer-section {
    margin-bottom: 0px; 
    margin-top: 30px;
    align-items: center;
    text-align: center;
    font-size: 18px;
}


.item-name,
.item-price,
.item-quantity,
.item-buyers{
    border: 1px solid #000;
    padding: 10px; /*height of display rows*/
    align-self: stretch; /* Ensures that the cell stretches to fill the row height */
    word-break: break-word; /* Allows the text to wrap within the container */
    overflow-wrap: break-word; /* Ensures words break to prevent overflow */
}

.item-row {
    display: contents; /* This lets the children participate in the grid directly */
}

.item-quantity {
    display: grid;
    justify-content: center;
    align-items: center;
    border: 1px solid #000;
    padding: 10px;
  }

  .item-quantity input {
    width: 100%;
    text-align: center;
  }

  .item-name,
  .item-price {
  display: flex;
  justify-content: center;
  align-items: center;
}

.item-buyers {
    display: flex;
    flex-direction: column;
    gap: 5px;
    align-items: flex-start;
  }
  
  .buyer-row {
    display: flex;
    flex-wrap: wrap;
    gap: 10px;
  }

  .buyer-row-gap {
    height: 15px;
  }

.buyer-container {
    display: flex;
    align-items: center; /* Center align the checkbox and label */
    margin-right: 5px; /* Adds space between buyer entries */
}

.buyer-container input[type='checkbox']:hover,
.buyer-container .buyer-label:hover {
    cursor: grab;
}

.buyer-label {
    margin-left: 5px; /* Space between the checkbox and the label text */
}


/* Add margins to the grid container on larger screens */
@media (min-width: 750px) {
    #display-info {
        margin-left: 14vw;
        margin-right: 14vw;
    }

    /* Apply the same margin to the title bar to align with the grid */
    #display-titles {
        margin-left: 14vw;
        margin-right: 14vw;
    }

}

/* Keep the full width on mobile screens */
@media (max-width: 749px) {
    #display-info, #display-titles {
        margin-left: 10;
        margin-right: 10;
        display: grid;
        grid-template-columns: 0.7fr 0.7fr 0.4fr 1.2fr;
    }
}


